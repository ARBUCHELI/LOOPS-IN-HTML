# PROJECT
---------

* Repetitive Cafe
-----------------

Make use of some of the PHP loop shorthand to create HTML for a restaurant menu. Practice using the different loop types with HTML.

* Prep
------
1.
This is a menu page for the cafe. We are going to add some drinks which are uniquely priced and some pastries which each sell for $2.

We’re going to store the names and prices (for drinks) of the items in PHP and embed PHP in our HTML to display them.

Begin by creating a PHP section at the top of the file to store the item details.

Create an array $drinks and populate it with several drinks you’d like to serve in your cafe. The name of the drink should be the key and the price should be the value.


Hint
We went with:

<?php
$drinks = [
  "Latte" => 3.99,
  "Coffee" => 2.00,
  "Tea" => 2.50,
  "Mocha" => 4.50
];
?>

2.
Add a list of pastries to serve in your cafe. Since they are all $2, there is no need to add prices.


Hint
We went with:

$pastries = [
  "Croissant",
  "Muffin",
  "Slice of Pie",
  "Slice of Cake",
  "Cupcake",
  "Brownie"
];

* foreach Loop
--------------
3.
Within the <ul> section under drinks, create a foreach loop using the shorthand syntax. It should iterate over the items in $drinks and provide access to the keys and values.


Hint
One approach (you can use your own variables for $drink and $price:

<?php foreach($drinks as $drink=>$price):?>
<?php endforeach;?>

4.
Within that foreach loop, add an li element for each drink item.


Hint
The li element goes inside the loop:

<?php foreach($drinks as $drink=>$price):?>
<li></li>
<?php endforeach;?>

5.
Within the li element, re-enter PHP mode to print the name of the drink and the price. Feel free to use your local currency.


Hint
Using dollars:

<?php foreach($drinks as $drink=>$price):?>
<li><?="$drink: $$price"?></li>
<?php endforeach;?>

* for Loop
----------
6.
Next, we need to add our list of pastries to the menu.

Begin by adding a for loop within the ul element under the “Pastries!” heading. The loop variable should be initialized to 0 and increment at each loop iteration.


Hint
<ul>
<?php for($i=0; ; $i++):?>

<?php endfor;?>
</ul>

7.
We are going to use the loop variable to access elements within $pastries, so we need the for loop to continue while our loop counter is less than the number of items in $pastries.

Add this condition to your for loop.


Hint
There are a couple of ways to approach this, but this is the most common:

<ul>
<?php for($i=0; $i<count($pastries); $i++):?>

<?php endfor;?>
</ul>

8.
Create an li element for each loop iteration.


Hint
<ul>
<?php for($i=0; $i<count($pastries); $i++):?>
<li></li>
<?php endfor;?>
</ul>

9.
Within the li element, use the loop variable to index into $pastries and print the name of each pastry.


Hint
Our loop variable is $i, so we are indexing like so:

<ul>
<?php for($i=0; $i<count($pastries); $i++):?>
<li><?=$pastries[$i]?></li>
<?php endfor;?>
</ul>

* Additional ideas
------------------
10.
Great! You now have a menu of drinks and pastries for the cafe. Note how you can easily update the arrays at the beginning of the file and the HTML website is updated accordingly.

If you would like to keep practicing, try adding a food section to the menu and use a while loop to iterate over the items.

Which loop type is the most readable for you?

Which was the easiest to create for this type of application?

index.php
---------
<?php
$drinks = [
  "Latte" => 3.99,
  "Coffee" => 2.00,
  "Tea" => 2.50,
  "Mocha" => 4.50,
  "Hot Chocolate" => 3
];

$pastries = [
  "Croissant",
  "Muffin",
  "Slice of Pie",
  "Slice of Cake",
  "Cupcake",
  "Brownie",
  "Portion of Cookies"
];
?>


<h1>Welcome to the Repetitive Cafe</h1>

<h3>Drinks!</h3>
<ul>
<?php
  foreach($drinks as $drink=>$price):
?>
  <li><?="$drink: $$price"?></li>
<?php endforeach;?>
</ul>
<h3>Pastries! ($2 each)</h3>
<ul>
  <?php
  for($i=0; $i<count($pastries); $i++):
?>
  <li><?=$pastries[$i]?></li>
<?php endfor;?>
</ul>